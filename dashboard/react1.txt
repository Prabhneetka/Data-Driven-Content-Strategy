import React, { useState } from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LineChart, Line, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';
import { TrendingUp, TrendingDown, Users, Eye, Heart, Share2, Mail, PlayCircle, FileText, Calendar } from 'lucide-react';

const ContentDashboard = () => {
  const [selectedTimeframe, setSelectedTimeframe] = useState('30d');
  
  // Sample data
  const contentPerformanceData = [
    { name: 'Blog Posts', views: 45000, engagement: 3200, leads: 180, roi: 4.2 },
    { name: 'Videos', views: 32000, engagement: 4800, leads: 220, roi: 5.8 },
    { name: 'Social Media', views: 78000, engagement: 2400, leads: 95, roi: 2.1 },
    { name: 'Email', views: 15000, engagement: 2100, leads: 310, roi: 7.3 },
    { name: 'Webinars', views: 8500, engagement: 1200, leads: 150, roi: 6.1 }
  ];

  const monthlyTrends = [
    { month: 'Jan', traffic: 25000, leads: 180, engagement: 2.1 },
    { month: 'Feb', traffic: 28000, leads: 210, engagement: 2.4 },
    { month: 'Mar', traffic: 32000, leads: 240, engagement: 2.8 },
    { month: 'Apr', traffic: 35000, leads: 280, engagement: 3.1 },
    { month: 'May', traffic: 42000, leads: 320, engagement: 3.5 }
  ];

  const topContent = [
    { title: "Complete Guide to Data Analytics", type: "Blog", views: 12500, engagement: 8.2, leads: 45 },
    { title: "5 Content Strategy Mistakes", type: "Video", views: 9800, engagement: 12.1, leads: 38 },
    { title: "Customer Journey Mapping", type: "Blog", views: 8700, engagement: 6.9, leads: 32 },
    { title: "Weekly Industry Insights", type: "Email", views: 7200, engagement: 15.3, leads: 28 },
    { title: "Analytics Workshop", type: "Webinar", views: 6800, engagement: 22.5, leads: 55 }
  ];

  const channelDistribution = [
    { name: 'Organic Search', value: 45, color: '#3B82F6' },
    { name: 'Social Media', value: 25, color: '#10B981' },
    { name: 'Email', value: 15, color: '#F59E0B' },
    { name: 'Direct', value: 10, color: '#EF4444' },
    { name: 'Referral', value: 5, color: '#8B5CF6' }
  ];

  const MetricCard = ({ title, value, change, icon: Icon, trend }) => (
    <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-sm font-medium text-gray-600">{title}</p>
          <p className="text-2xl font-bold text-gray-900 mt-1">{value}</p>
        </div>
        <div className={`p-3 rounded-full ${trend === 'up' ? 'bg-green-100' : 'bg-red-100'}`}>
          <Icon className={`w-6 h-6 ${trend === 'up' ? 'text-green-600' : 'text-red-600'}`} />
        </div>
      </div>
      <div className="flex items-center mt-4">
        {trend === 'up' ? (
          <TrendingUp className="w-4 h-4 text-green-500 mr-1" />
        ) : (
          <TrendingDown className="w-4 h-4 text-red-500 mr-1" />
        )}
        <span className={`text-sm font-medium ${trend === 'up' ? 'text-green-600' : 'text-red-600'}`}>
          {change}
        </span>
        <span className="text-sm text-gray-500 ml-1">vs last period</span>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <div className="flex justify-between items-center">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">Content Performance Dashboard</h1>
              <p className="text-gray-600 mt-2">Data-driven insights for content strategy optimization</p>
            </div>
            <div className="flex items-center space-x-4">
              <select 
                value={selectedTimeframe}
                onChange={(e) => setSelectedTimeframe(e.target.value)}
                className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="7d">Last 7 days</option>
                <option value="30d">Last 30 days</option>
                <option value="90d">Last 90 days</option>
                <option value="1y">Last year</option>
              </select>
              <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                Generate Report
              </button>
            </div>
          </div>
        </div>

        {/* Key Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <MetricCard
            title="Total Content Views"
            value="178.5K"
            change="+12.5%"
            icon={Eye}
            trend="up"
          />
          <MetricCard
            title="Engagement Rate"
            value="3.2%"
            change="+0.8%"
            icon={Heart}
            trend="up"
          />
          <MetricCard
            title="Generated Leads"
            value="955"
            change="+18.3%"
            icon={Users}
            trend="up"
          />
          <MetricCard
            title="Average ROI"
            value="4.8x"
            change="+1.2x"
            icon={TrendingUp}
            trend="up"
          />
        </div>

        {/* Charts Row */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          {/* Content Performance by Type */}
          <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Content Performance by Type</h3>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={contentPerformanceData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Bar dataKey="views" fill="#3B82F6" name="Views" />
                <Bar dataKey="leads" fill="#10B981" name="Leads" />
              </BarChart>
            </ResponsiveContainer>
          </div>

          {/* Monthly Trends */}
          <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Monthly Performance Trends</h3>
            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={monthlyTrends}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="month" />
                <YAxis />
                <Tooltip />
                <Line type="monotone" dataKey="traffic" stroke="#3B82F6" name="Traffic" strokeWidth={2} />
                <Line type="monotone" dataKey="leads" stroke="#10B981" name="Leads" strokeWidth={2} />
                <Line type="monotone" dataKey="engagement" stroke="#F59E0B" name="Engagement %" strokeWidth={2} />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* Bottom Row */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Top Performing Content */}
          <div className="lg:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Top Performing Content</h3>
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead>
                  <tr className="border-b border-gray-200">
                    <th className="text-left py-2 px-3 text-sm font-medium text-gray-600">Content Title</th>
                    <th className="text-left py-2 px-3 text-sm font-medium text-gray-600">Type</th>
                    <th className="text-left py-2 px-3 text-sm font-medium text-gray-600">Views</th>
                    <th className="text-left py-2 px-3 text-sm font-medium text-gray-600">Engagement</th>
                    <th className="text-left py-2 px-3 text-sm font-medium text-gray-600">Leads</th>
                  </tr>
                </thead>
                <tbody>
                  {topContent.map((item, index) => (
                    <tr key={index} className="border-b border-gray-100">
                      <td className="py-3 px-3">
                        <div className="flex items-center">
                          {item.type === 'Blog' && <FileText className="w-4 h-4 text-blue-500 mr-2" />}
                          {item.type === 'Video' && <PlayCircle className="w-4 h-4 text-red-500 mr-2" />}
                          {item.type === 'Email' && <Mail className="w-4 h-4 text-green-500 mr-2" />}
                          {item.type === 'Webinar' && <Calendar className="w-4 h-4 text-purple-500 mr-2" />}
                          <span className="text-sm font-medium text-gray-900">{item.title}</span>
                        </div>
                      </td>
                      <td className="py-3 px-3">
                        <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                          {item.type}
                        </span>
                      </td>
                      <td className="py-3 px-3 text-sm text-gray-900">{item.views.toLocaleString()}</td>
                      <td className="py-3 px-3 text-sm text-gray-900">{item.engagement}%</td>
                      <td className="py-3 px-3 text-sm text-gray-900">{item.leads}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>

          {/* Traffic Sources */}
          <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Traffic Sources</h3>
            <ResponsiveContainer width="100%" height={250}>
              <PieChart>
                <Pie
                  data={channelDistribution}
                  cx="50%"
                  cy="50%"
                  outerRadius={80}
                  dataKey="value"
                  label={({ name, value }) => `${name}: ${value}%`}
                >
                  {channelDistribution.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
            <div className="mt-4 space-y-2">
              {channelDistribution.map((item, index) => (
                <div key={index} className="flex items-center justify-between">
                  <div className="flex items-center">
                    <div 
                      className="w-3 h-3 rounded-full mr-2" 
                      style={{ backgroundColor: item.color }}
                    ></div>
                    <span className="text-sm text-gray-600">{item.name}</span>
                  </div>
                  <span className="text-sm font-medium text-gray-900">{item.value}%</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Insights and Recommendations */}
        <div className="mt-8 bg-white p-6 rounded-lg shadow-sm border border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Key Insights & Recommendations</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="p-4 bg-blue-50 rounded-lg">
              <h4 className="font-medium text-blue-900 mb-2">📈 Performance Insight</h4>
              <p className="text-sm text-blue-800">Video content shows highest engagement (12.1%) and ROI (5.8x). Consider increasing video production by 40%.</p>
            </div>
            <div className="p-4 bg-green-50 rounded-lg">
              <h4 className="font-medium text-green-900 mb-2">🎯 Optimization Opportunity</h4>
              <p className="text-sm text-green-800">Email content generates most leads per view. Optimize email frequency and segmentation for 25% improvement.</p>
            </div>
            <div className="p-4 bg-yellow-50 rounded-lg">
              <h4 className="font-medium text-yellow-900 mb-2">⚠️ Attention Needed</h4>
              <p className="text-sm text-yellow-800">Social media ROI is below target (2.1x vs 4.0x goal). Review content strategy and posting schedule.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContentDashboard;